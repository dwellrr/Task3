@{
    ViewData["Title"] = "Client";
}

@{
    var collapsibleInfo = new CollapsibleViewModel
            {
                Title = "Full Information",
                Items = new List<CollapsibleItem>
        {
            new CollapsibleItem { Label = "Job", Value = Model.job },
            new CollapsibleItem { Label = "Marital Status", Value = Model.married },
            new CollapsibleItem { Label = "Education", Value = Model.education },
            new CollapsibleItem { Label = "Default", Value = Model.def },
            new CollapsibleItem { Label = "Balance", Value = Model.balance.ToString() },
            new CollapsibleItem { Label = "Housing", Value = Model.housing },
            new CollapsibleItem { Label = "Loan", Value = Model.loan },
            new CollapsibleItem { Label = "Contact", Value = Model.contact },
            new CollapsibleItem { Label = "Day", Value = Model.day.ToString() },
            new CollapsibleItem { Label = "Month", Value = Model.month },
            new CollapsibleItem { Label = "Campaign", Value = Model.campaign.ToString() },
            new CollapsibleItem { Label = "Previous Days", Value = Model.pdays.ToString()},
            new CollapsibleItem { Label = "Previous", Value = Model.previous.ToString() },
            new CollapsibleItem { Label = "Previous Outcome", Value = Model.poutcome },
            new CollapsibleItem { Label = "Was already called?", Value = Model.wasCalled.ToString() },
            new CollapsibleItem { Label = "Participating in this program?", Value = Model.isParticipating.ToString() }
        }
            };

    var collapsibleContact = new CollapsibleViewModel
            {
                Title = "Contact Infomation",
                Items = new List<CollapsibleItem>
        {
            new CollapsibleItem { Label = "Phone Number", Value = Model.PhoneNumber },
            new CollapsibleItem { Label = "Days after last contact", Value = Model.pdays.ToString()},
            new CollapsibleItem { Label = "Was already called?", Value = Model.wasCalled.ToString() },
            new CollapsibleItem { Label = "Participating in this program?", Value = Model.isParticipating.ToString() }
        }
            };
}



@model Task3.Models.Client

<div style="display: flex; align-items: center;">
    <div style="flex-grow: 1;">
        <h2>@Model.Name @Model.Surname</h2>
        <p>Date of Birth: @Model.DateOfBirth.ToShortDateString()</p>
    </div>
    <div>
        @Html.ActionLink("Edit", "EditClient", new { id = Model.Id }, new { @class = "btn btn-primary" })
    </div>
</div>

<partial name="_CollapsiblePartial" model="collapsibleContact" />
<partial name="_CollapsiblePartial" model="collapsibleInfo" />

<form id="evaluateForm">
    <button type="button" id="evaluateButton" onclick="evaluateCampaignChance()">Evaluate Campaign Chance</button>
</form>

<div id="predictionResults" style="margin-top: 20px;"></div>

<script>
    function evaluateCampaignChance() {
        var formData = new FormData(document.getElementById("evaluateForm"));
        formData.append("Id", @Model.Id); // Pass client ID to the server

        fetch('@Url.Action("EvaluateCampaignChance", "Home")', {
            method: "POST",
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                console.log(data);
                var resultsContainer = document.getElementById("predictionResults");
                resultsContainer.innerHTML = "<h3>Evaluation Results</h3>" +
                    "<p>Most Likely: " + data.predictedLabel + "</p>" +
                    "<p>Probability of Yes: " + data.score[1].toFixed(2) + "%</p>" +
                    "<p>Probability of No: " + data.score[0].toFixed(2) + "%</p>";
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }
</script>